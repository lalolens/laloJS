name: Build and Deploy

on:
  push:
    branches:
      - main  # Trigger the workflow when there's a push to the main branch
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the repository code
      - name: Check out repository
        uses: actions/checkout@v3

      # Step 2: Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'  # Specify the Node.js version

      # Step 3: Install dependencies
      - name: Install dependencies
        working-directory: playground/chat
        run: npm ci

      # Step 4: Build the package
      - name: Build the package
        working-directory: playground/chat
        run: npm run build

      # Step 5: Deploy the `dist` folder to the `build` branch
      - name: Deploy to build branch
        env:
          ACCESS_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        run: |
          git config --global user.email "elaloglens@gmail.com"
          git config --global user.name "Lalolens"

          # Create or switch to the build branch
          git fetch
          git checkout build || git checkout --orphan build

          # Create a directory to store build artifacts
          mkdir -p build_artifacts

          # Copy necessary build artifacts from the checked-out main branch
          la -alt
          cp -r playground/chat/dist/* build_artifacts/
          cp playground/chat/package.json build_artifacts/
          cp playground/chat/README.md build_artifacts/
          cp playground/chat/LICENSE build_artifacts/LICENSE || true  # Optional LICENSE

          # Remove old files from the branch while keeping .git directory and build_artifacts
          find . -mindepth 1 -maxdepth 1 ! -name ".git" ! -name "build_artifacts" -exec rm -rf {} +

          # Move build artifacts to root and delete the temporary folder
          mv build_artifacts/* .
          rm -rf build_artifacts

          # Debug: List files before committing
          echo "Files before committing:"
          ls -la

          # Commit and push the changes to the build branch
          git add -A
          if [ -n "$(git status --porcelain)" ]; then
            git commit -m "Deploy build"

            # Use PAT directly for pushing changes to the build branch
            git push --force-with-lease https://x-access-token:${ACCESS_TOKEN}@github.com/lalolens/laloJS.git HEAD:build
          else
            echo "No changes to deploy"
          fi
